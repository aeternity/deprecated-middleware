version: '3'

services:

  redis:
    image: redis
    volumes:
      - 'redisdata:/data'

  epoch:
    image: aetrnty/epoch
    env_file: .env
    environment:
      EPOCH_CONFIG: /home/epoch/epoch.yaml
    volumes:
      - ${PWD}/docker/epoch/epoch_config.yaml:/home/epoch/epoch.yaml
      - epochdb:/home/epoch/node/data/mnesia
      - node_keys:/home/epoch/node/keys

  web:
    build: .
    entrypoint: /code/docker/docker-entrypoint.sh
    env_file: .env
    environment:
      - EPOCH_KEYS_DIR=/epoch/keys
      - DATABASE_PATH=/db/
      - RABBITMQ_HOST=rabbitmq
    volumes:
      - .:/code
      - 'cachedata:/cache'
      - node_keys:/epoch/keys
      - middleware_db:/db/
    ports:
      - "${APP_PORT:-8000}:8000"
    depends_on:
      - redis

  rabbitmq:
    image: rabbitmq:3.7
    env_file: .env
    environment:
      - RABBITMQ_USER=rabbitmq
    volumes:
      - ./docker/rabbitmq/docker-entrypoint.sh:/app/rabbitmq-entrypoint.sh
      - rabbit:/var/lib/rabbitmq

  proxy:
    image: nginx:1.13.8
    hostname: proxy
    ports:
     - "3013:3013"
    volumes:
      - ./docker/nginx/nginx-default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/nginx-cors.conf:/etc/nginx/cors.conf

volumes:
  node_keys:
  middleware_db:
  epochdb:
  pgdata:
  redisdata:
  cachedata:
  rabbit:
